#include "device_registers.h"
#include "clocks_and_modes.h"
#include "LPUART.h"
#include <stdio.h>

int num = 3456;
int lpit0_ch0_flag_counter=0, i=0;
void PORT_init(void)
{
    PCC->PCCn[PCC_PORTC_INDEX] != PCC_PCCn_CGC_MASK;

    PORTC->PCR[9] |= PORT_PCR_MUX(2);
}

void WDOG_disable(void)
{
    WDOG->CNT=0xD928C520;
    WDOG->TOVAL=0x0000FFFF;
    WDOG->CS = 0x00002100;
}

void LPIT0_init(unit32_t delay)
{
    unit32_t timeout;
    PCC->PCCn[PCC_LPIT_INDEX] = PCC_PCCn_PCS(6);
    PCC->PCCn[PCC_LPIT_INDEX] |= PCC_PCCn_CGC_MASK;

    LPIT0 -> MCR |= LPIT_MCR_M_CEN_MASK;

    timeout = delay * 40000;
    LPIT0->TMR[0].TVAL = timeout;
    LPIT0->TMR[0].TCTRL |= LPIT_TMR_TCTRL_T_EN_MASK;
}

void delay_ms (volatile int ms)
{
    LPIT0_init(ms);
    while(0 == (LPIT0->MSR & LPIT_MSR_TIF0_MASK)){}
            lpit0_ch0_flag_counter++;
            LPIT0->MSR |= LPIT_MSR_TIF0_MASK;
}

void LPUART1_init(void)
{
    PCC->PCCn[PCC_LPUART1_INDEX] &= ~PCC_PCCn_CGC_MASK;
    PCC->PCCn[PCC_LPUART1_INDEX] |= PCC_PCCn_PCS(0x001) | PCC_PCCn_CGC_MASK;

    LPUART1->BAUD = 0xF000034; /* 9600 BAUD */

    LPUART1->CTRL = 0x000C000;
}

int main(void)
{
    WDOG_disable();
    SOSC_init_8MHz();
    SPLL_init_160MHz();
    NormalRUNmode_80MHz();
    SystemCoreClockUpdate();

    char msg_init = 0x00;
    char msg_clear = 0xA3;
    char msg_reset = 0xA0;
    char msg_Start = 0xA2;
    char string_array[20];

    PORT_init();
    LPUART1_init();

    LPUART1_transmit_char(msg_Start);
    delay_ms(5);

    sprintf(string_array,"%d",num);

    while(string_array[i] != '\0')
    {
        LPUART1_transmit_char(string_array[i]);
        i++;
    }
    i=0;
    delay_ms(5);
    
    LPUART1_transmit_char(msg_init);
    delay_ms(5);
}

